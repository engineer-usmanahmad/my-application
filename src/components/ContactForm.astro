---
import { submitContactForm } from '../lib/database'
---

<div class="bg-white p-8 rounded-2xl shadow-lg">
  <h2 class="text-2xl font-bold text-gray-900 mb-6">Send us a Message</h2>
  <form class="space-y-6" id="contact-form">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">First Name *</label>
        <input 
          type="text" 
          id="firstName"
          name="firstName"
          required
          class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        />
      </div>
      <div>
        <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">Last Name *</label>
        <input 
          type="text" 
          id="lastName"
          name="lastName"
          required
          class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        />
      </div>
    </div>
    
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email Address *</label>
      <input 
        type="email" 
        id="email"
        name="email"
        required
        class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
      />
    </div>
    
    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
      <input 
        type="tel" 
        id="phone"
        name="phone"
        class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
      />
    </div>
    
    <div>
      <label for="course" class="block text-sm font-medium text-gray-700 mb-2">Course of Interest</label>
      <select 
        id="course"
        name="course"
        class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
      >
        <option value="">Select a course</option>
        <option value="aws-2-in-1">AWS 2 In 1</option>
        <option value="devops-engineering">DevOps Engineering</option>
        <option value="azure-2-in-1">Azure 2 In 1</option>
        <option value="linux-deep-dive">Linux Deep Dive</option>
        <option value="kubernetes">Kubernetes</option>
        <option value="docker">Docker</option>
        <option value="ansible">Ansible</option>
        <option value="jenkins">Jenkins</option>
        <option value="open-source-voip">Open Source VoIP</option>
        <option value="general">General Inquiry</option>
      </select>
    </div>
    
    <div>
      <label for="message" class="block text-sm font-medium text-gray-700 mb-2">Message *</label>
      <textarea 
        id="message"
        name="message"
        rows="4"
        required
        class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        placeholder="Tell us about your background and what you'd like to learn..."
      ></textarea>
    </div>
    
    <button 
      type="submit"
      id="submit-btn"
      class="w-full bg-primary-600 text-white py-3 rounded-lg font-semibold hover:bg-primary-700 transition-colors"
    >
      Send Message
    </button>
  </form>
  
  <!-- Success/Error Messages -->
  <div id="form-message" class="hidden mt-4 p-4 rounded-lg"></div>
</div>

<script>
  // Contact form handling with comprehensive error handling and debugging
  document.addEventListener('DOMContentLoaded', function() {
    console.log('Contact form script loaded');
    
    const contactForm = document.getElementById('contact-form') as HTMLFormElement;
    const formMessage = document.getElementById('form-message') as HTMLElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    
    if (!contactForm) {
      console.error('Contact form not found');
      return;
    }
    
    contactForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      console.log('Form submission started');
      
      try {
        // Get form elements
        const firstName = (document.getElementById('firstName') as HTMLInputElement)?.value?.trim();
        const lastName = (document.getElementById('lastName') as HTMLInputElement)?.value?.trim();
        const email = (document.getElementById('email') as HTMLInputElement)?.value?.trim();
        const phone = (document.getElementById('phone') as HTMLInputElement)?.value?.trim();
        const course = (document.getElementById('course') as HTMLSelectElement)?.value?.trim();
        const message = (document.getElementById('message') as HTMLTextAreaElement)?.value?.trim();
        
        console.log('Form data extracted:', {
          firstName,
          lastName,
          email,
          phone,
          course,
          message: message ? 'Present' : 'Missing'
        });
        
        // Client-side validation
        if (!firstName || !lastName || !email || !message) {
          throw new Error('Please fill in all required fields (marked with *)');
        }
        
        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          throw new Error('Please enter a valid email address');
        }
        
        // Prepare data for API
        const formData = {
          firstName,
          lastName,
          email,
          phone: phone || '',
          course: course || 'General',
          message
        };
        
        console.log('Sending data to API:', formData);
        
        // Show loading state
        const originalText = submitBtn.textContent;
        submitBtn.innerHTML = `
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Sending...
        `;
        submitBtn.disabled = true;
        
        // Submit to API
        const response = await fetch('/api/contact', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData)
        });
        
        console.log('API response status:', response.status);
        
        const result = await response.json();
        console.log('API response data:', result);
        
        if (!response.ok) {
          throw new Error(result.error || `Server error: ${response.status}`);
        }
        
        if (!result.success) {
          throw new Error(result.error || 'Failed to submit form');
        }
        
        // Success
        console.log('Form submitted successfully');
        showMessage(
          'âœ… Thank you for your message! We have received your inquiry and will get back to you within 24 hours.',
          'success'
        );
        contactForm.reset();
        
      } catch (error) {
        console.error('Form submission error:', error);
        
        let errorMessage = 'Sorry, there was an error submitting your message.';
        
        if (error instanceof Error) {
          errorMessage = error.message;
        }
        
        // Add helpful fallback information
        errorMessage += ' Please try again or contact us directly via WhatsApp at +92 324 4280044.';
        
        showMessage(errorMessage, 'error');
        
      } finally {
        // Reset button state
        submitBtn.textContent = 'Send Message';
        submitBtn.disabled = false;
      }
    });
    
    function showMessage(message: string, type: 'success' | 'error') {
      if (!formMessage) return;
      
      formMessage.className = `mt-4 p-4 rounded-lg ${
        type === 'success' 
          ? 'bg-green-50 border border-green-200 text-green-800' 
          : 'bg-red-50 border border-red-200 text-red-800'
      }`;
      formMessage.textContent = message;
      formMessage.classList.remove('hidden');
      
      // Auto-hide success messages after 8 seconds
      if (type === 'success') {
        setTimeout(() => {
          formMessage.classList.add('hidden');
        }, 8000);
      }
    }
  });
</script>